with(dat_housing, chisq.test(x=as.factor(mucus3), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
powersim.tab = with(dat_housing, table(Placement, `Mucus Score`) )
powersim.tab
sum(pvec<0.05)/length(pvec)
powersim.tab = with(subset(dat_housing, Bedding == "Shavings"), table(Placement, `Mucus Score`) )
pvec=NULL
for(i in 1:1000){
e1=sample(0:4, size=Nyes, replace=TRUE, prob =pyes)
e2=sample(0:4, size=Nno, replace=TRUE, prob =pno)
dat=data.frame(mucus=c(e1, e2), placement=c(rep("Exterior", Nyes),rep("Interior", Nno)) )
tmp=chisq.test(x=as.factor(dat$placement), y =as.factor(dat$mucus) , correct = FALSE,
simulate.p.value = FALSE, B = 2000)
pvec=c(pvec, tmp$p.value) }
sum(pvec<0.05)/length(pvec)
powersim.tab/rowSums(powersim.tab)
pyes=(powersim.tab/rowSums(powersim.tab))[1, ]
pno=(powersim.tab/rowSums(powersim.tab))[2, ]
Nyes=(rowSums(powersim.tab))[1]
Nno=(rowSums(powersim.tab))[2]
pvec=NULL
for(i in 1:1000){
e1=sample(0:4, size=Nyes, replace=TRUE, prob =pyes)
e2=sample(0:4, size=Nno, replace=TRUE, prob =pno)
dat=data.frame(mucus=c(e1, e2), placement=c(rep("Exterior", Nyes),rep("Interior", Nno)) )
tmp=chisq.test(x=as.factor(dat$placement), y =as.factor(dat$mucus) , correct = FALSE,
simulate.p.value = FALSE, B = 2000)
pvec=c(pvec, tmp$p.value) }
sum(pvec<0.05)/length(pvec)
Nyes=(rowSums(powersim.tab))[1]
Nno=(rowSums(powersim.tab))[2]
pvec=NULL
for(i in 1:1000){
e1=sample(0:4, size=Nyes, replace=TRUE, prob =pyes)
e2=sample(0:4, size=Nno, replace=TRUE, prob =pno)
dat=data.frame(mucus=c(e1, e2), placement=c(rep("Exterior", Nyes),rep("Interior", Nno)) )
tmp=chisq.test(x=as.factor(dat$placement), y =as.factor(dat$mucus) , correct = FALSE,
simulate.p.value = FALSE, B = 2000)
pvec=c(pvec, tmp$p.value) }
sum(pvec<0.05)/length(pvec)
table(dat_housing$Bedding)
powersim.tab = with(subset(dat_housing, Bedding == "Straw"), table(Placement, `Mucus Score`) )
powersim.tab/rowSums(powersim.tab)
pyes=(powersim.tab/rowSums(powersim.tab))[1, ]
pno=(powersim.tab/rowSums(powersim.tab))[2, ]
Nyes=(rowSums(powersim.tab))[1]
Nno=(rowSums(powersim.tab))[2]
pvec=NULL
for(i in 1:1000){
e1=sample(0:4, size=Nyes, replace=TRUE, prob =pyes)
e2=sample(0:4, size=Nno, replace=TRUE, prob =pno)
dat=data.frame(mucus=c(e1, e2), placement=c(rep("Exterior", Nyes),rep("Interior", Nno)) )
tmp=chisq.test(x=as.factor(dat$placement), y =as.factor(dat$mucus) , correct = FALSE,
simulate.p.value = FALSE, B = 2000)
pvec=c(pvec, tmp$p.value) }
sum(pvec<0.05)/length(pvec)
powersim.tab = with(dat_housing, table(Placement, `Mucus Score`) )
powersim.tab/rowSums(powersim.tab)
pyes=(powersim.tab/rowSums(powersim.tab))[1, ]
pno=(powersim.tab/rowSums(powersim.tab))[2, ]
Nyes=(rowSums(powersim.tab))[1]
Nno=(rowSums(powersim.tab))[2]
pvec=NULL
for(i in 1:1000){
e1=sample(0:4, size=Nyes, replace=TRUE, prob =pyes)
e2=sample(0:4, size=Nno, replace=TRUE, prob =pno)
dat=data.frame(mucus=c(e1, e2), placement=c(rep("Exterior", Nyes),rep("Interior", Nno)) )
tmp=chisq.test(x=as.factor(dat$placement), y =as.factor(dat$mucus) , correct = FALSE,
simulate.p.value = FALSE, B = 2000)
pvec=c(pvec, tmp$p.value) }
sum(pvec<0.05)/length(pvec)
dat_housing2 <-subset(dat_housing, (!is.na(Placement))& (!is.na(Bedding)) )%>% mutate(Mucus = ifelse(`Mucus Score`<=1, 1, as.numeric(`Mucus Score`))) %>% mutate(Mucus = ifelse(Mucus>=3, 3, as.numeric(Mucus)))
with(dat_housing2, chisq.test(x=as.factor(Mucus), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
table(dat_housing2$Mucus)
table(dat_housing$Bedding, dat_housing$Placement)
with(dat_2yrold, chisq.test(x=as.factor(`Consensus Mucus`), y = as.factor(Surface), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
powersim.tab = with(dat_2yrold, table(Surface, `Consensus Mucus`) )
powersim.tab
pyes=(powersim.tab/rowSums(powersim.tab))[1, ]
pno=(powersim.tab/rowSums(powersim.tab))[2, ]
p3=(powersim.tab/rowSums(powersim.tab))[3, ]
Nyes=(rowSums(powersim.tab))[1]
Nno=(rowSums(powersim.tab))[2]
N3=(rowSums(powersim.tab))[3]
N3
powersim.tab
pyes=(powersim.tab/rowSums(powersim.tab))[1, ]
pno=(powersim.tab/rowSums(powersim.tab))[2, ]
p3=(powersim.tab/rowSums(powersim.tab))[3, ]
Nyes=(rowSums(powersim.tab))[1]
Nno=(rowSums(powersim.tab))[2]
N3=(rowSums(powersim.tab))[3]
pvec=NULL
for(i in 1:1000){
e1=sample(0:4, size=Nyes, replace=TRUE, prob =pyes)
e2=sample(0:4, size=Nno, replace=TRUE, prob =pno)
e3=sample(0:4, size=N3, replace=TRUE, prob =p3)
dat=data.frame(mucus=c(e1, e2, e3), surface=c(rep("All weather", Nyes),rep("Dirt", Nno), rep("Turf", N3)) )
tmp=chisq.test(x=as.factor(dat$surface), y =as.factor(dat$mucus) , correct = FALSE,
simulate.p.value = FALSE, B = 2000)
pvec=c(pvec, tmp$p.value) }
sum(pvec<0.05)/length(pvec)
dat_2yrold$mucus3= cut(dat_2yrold$`Consensus Mucus`, breaks = c(-0.1,1.1, 2.1, 4.1),
labels= c("none", "medimum", "high"))
with(dat_2yrold, chisq.test(x=as.factor(mucus3), y = as.factor(Surface), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
table(dat_housing$Placement)
table(dat_housing$Bedding, dat_housing$Placement)
sum(table(dat_housing$Bedding, dat_housing$Placement))
powersim.tab = with(dat_2yrold, table(Surface, `Consensus Mucus`) )
sum(powersim.tab)
powersim.tab = with(dat_housing, table(Placement, `Mucus Score`) )
sum(powersim.tab)
powersim.tab = with(subset(dat_housing, Bedding == "Straw"), table(Placement, `Mucus Score`) )
sum(powersim.tab)
powersim.tab = with(subset(dat_housing, Bedding == "Shavings"), table(Placement, `Mucus Score`) )
sum(powersim.tab)
with(dat_housing, chisq.test(x=as.factor(`Mucus Score`), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(  subset(dat_housing, Bedding == "Shaving"), chisq.test(x=as.factor(`Mucus Score`), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
subset(dat_housing, Bedding == "Shaving")
table(dat_housing$Bedding)
with(  subset(dat_housing, Bedding == "Shavings"), chisq.test(x=as.factor(`Mucus Score`), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(subset(dat_housing2, Bedding %in% c("Shavings")),  chisq.test(x=as.factor(Mucus), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(subset(dat_housing2, Bedding %in% c("Shavings")),  chisq.test(x=as.factor(`Mucus Score`), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(subset(dat_housing, Bedding == "Straw"), chisq.test(x=as.factor(`Mucus Score`), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(dat_housing, chisq.test(x=as.factor(mucus3), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(subset(dat_housing, Bedding == "Shavings"), chisq.test(x=as.factor(mucus3), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(subset(dat_housing, Bedding == "Shavings"), chisq.test(x=as.factor(`Mucus Score`), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(subset(dat_housing, Bedding == "Straw"), chisq.test(x=as.factor(`Mucus Score`), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(subset(dat_housing, Bedding == "Straw"), chisq.test(x=as.factor(mucus3), y = as.factor(Placement), correct = FALSE,
simulate.p.value = FALSE, B = 2000))
powersim.tab = with(dat_housing, table(Placement, mucus3) )
powersim.tab
pyes=(powersim.tab/rowSums(powersim.tab))[1, ]
pno=(powersim.tab/rowSums(powersim.tab))[2, ]
Nyes=(rowSums(powersim.tab))[1]
Nno=(rowSums(powersim.tab))[2]
pvec=NULL
for(i in 1:1000){
e1=sample(0:2, size=Nyes, replace=TRUE, prob =pyes)
e2=sample(0:2, size=Nno, replace=TRUE, prob =pno)
print(table(e2))
dat=data.frame(mucus=c(e1, e2), placement=c(rep("Exterior", Nyes),rep("Interior", Nno)) )
tmp=chisq.test(x=as.factor(dat$placement), y =as.factor(dat$mucus) , correct = FALSE,
simulate.p.value = FALSE, B = 2000)
pvec=c(pvec, tmp$p.value) }
sum(pvec<0.05)/length(pvec)
powersim.tab = with(subset(dat_housing, Bedding == "Shavings"), table(Placement, mucus3) )
powersim.tab
pyes=(powersim.tab/rowSums(powersim.tab))[1, ]
pno=(powersim.tab/rowSums(powersim.tab))[2, ]
Nyes=(rowSums(powersim.tab))[1]
Nno=(rowSums(powersim.tab))[2]
pvec=NULL
for(i in 1:1000){
e1=sample(0:2, size=Nyes, replace=TRUE, prob =pyes)
e2=sample(0:2, size=Nno, replace=TRUE, prob =pno)
print(table(e2))
dat=data.frame(mucus=c(e1, e2), placement=c(rep("Exterior", Nyes),rep("Interior", Nno)) )
tmp=chisq.test(x=as.factor(dat$placement), y =as.factor(dat$mucus) , correct = FALSE,
simulate.p.value = FALSE, B = 2000)
pvec=c(pvec, tmp$p.value) }
sum(pvec<0.05)/length(pvec)
powersim.tab = with(subset(dat_housing, Bedding == "Straw"), table(Placement, mucus3) )
powersim.tab
powersim.tab
pyes=(powersim.tab/rowSums(powersim.tab))[1, ]
pno=(powersim.tab/rowSums(powersim.tab))[2, ]
Nyes=(rowSums(powersim.tab))[1]
Nno=(rowSums(powersim.tab))[2]
pvec=NULL
for(i in 1:1000){
e1=sample(0:2, size=Nyes, replace=TRUE, prob =pyes)
e2=sample(0:2, size=Nno, replace=TRUE, prob =pno)
#print(table(e2))
dat=data.frame(mucus=c(e1, e2), placement=c(rep("Exterior", Nyes),rep("Interior", Nno)) )
tmp=chisq.test(x=as.factor(dat$placement), y =as.factor(dat$mucus) , correct = FALSE,
simulate.p.value = FALSE, B = 2000)
pvec=c(pvec, tmp$p.value) }
sum(pvec<0.05)/length(pvec)
151-62-68
knitr::opts_chunk$set(echo = TRUE)
userID="yuan-admin"
setwd(paste("C:/Users/", userID, "/Dropbox/collabration/EIPH", sep=""))
dat_2yrold <- read_excel("2-yr-old mastersheet FINAL 090722.xlsx", sheet = 1)
ind= which(dat_2yrold$Track == "Gulftsream Park")
dat_2yrold$Track[ind]="Gulfstream Park"
names(dat_2yrold)
dat_2yrold$`Speed Index`=as.numeric(dat_2yrold$`Speed Index`)
dat_2yrold$`Distance (meters)`=as.numeric(dat_2yrold$`Distance (meters)`)
dat_2yrold$condition = dat_2yrold$`Track Condition`
ind= which(dat_2yrold$`Track Condition` %in% c( "FAst", "Fast (sealed)", "Fast (Sealed)") )
dat_2yrold$condition[ind] = "Fast"
ind= which(dat_2yrold$`Track Condition` %in% c( "Muddy", "Muddy (sealed)", "Slopppy (sealed)","Sloppy",
"Sloppy (sealed)", "Soft", "Yielding" ))
dat_2yrold$condition[ind] = "Slow"
table(dat_2yrold$condition)
dat_2yrold$dist_grp= as.factor(cut(dat_2yrold$`Distance (meters)`,c(0,1250,1550,4000),
labels=c("sprint", "intermediate", "long")) )##very few long distance
dat_2yrold$SI = dat_2yrold$`Speed Index`
table(dat_2yrold$dist_grp, dat_2yrold$Lasix)
dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
mean = mean(SI, na.rm = TRUE),
sd = sd(SI, na.rm = TRUE),
max = max(SI),
min=min(SI)
)
dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
mean = mean(SI, na.rm = TRUE),
sd = sd(SI, na.rm = TRUE),
max = max(SI),
min=min(SI)
)
dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
mean = mean(SI, na.rm = TRUE),
sd = sd(SI, na.rm = TRUE),
max = max(SI),
min=min(SI),
lasix = mean(as.numeric(Lasix == "Y"))
)
dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
mean = mean(SI, na.rm = TRUE),
sd = sd(SI, na.rm = TRUE),
max = max(SI, na.rm = TRUE),
min=min(SI, na.rm = TRUE),
lasix = mean(as.numeric(Lasix == "Y"))
)
userID="yuan-admin"
setwd(paste("C:/Users/", userID, "/Dropbox/collabration/EIPH", sep=""))
dat_2yrold <- read_excel("2-yr-old mastersheet FINAL 090722.xlsx", sheet = 1)
ind= which(dat_2yrold$Track == "Gulftsream Park")
dat_2yrold$Track[ind]="Gulfstream Park"
ind= which(dat_2yrold$Track == "Fairgrounds")
dat_2yrold$Track[ind]="Fair Grounds"
names(dat_2yrold)
dat_2yrold$`Speed Index`=as.numeric(dat_2yrold$`Speed Index`)
dat_2yrold$`Distance (meters)`=as.numeric(dat_2yrold$`Distance (meters)`)
dat_2yrold$dist_grp= as.factor(cut(dat_2yrold$`Distance (meters)`,c(0,1250,1550,4000),
labels=c("sprint", "intermediate", "long")) )##very few long distance
dat_2yrold$SI = dat_2yrold$`Speed Index`
dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
mean = mean(SI, na.rm = TRUE),
sd = sd(SI, na.rm = TRUE),
max = max(SI, na.rm = TRUE),
min=min(SI, na.rm = TRUE),
lasix = mean(as.numeric(Lasix == "Y"))
)
subset(dat_2yrold, Track =="Fair Grounds")
dat_FairGrounds=subset(dat_2yrold, Track =="Fair Grounds")
dat_FairGrounds$`Speed Index`
hist(dat_FairGrounds$`Speed Index`)
ind= which(dat_2yrold$`Track Condition` %in% c( "FAst", "Fast (sealed)", "Fast (Sealed)") )
dat_2yrold$condition[ind] = "Fast"
dat_2yrold$condition = dat_2yrold$`Track Condition`
ind= which(dat_2yrold$`Track Condition` %in% c( "FAst", "Fast (sealed)", "Fast (Sealed)") )
dat_2yrold$condition[ind] = "Fast"
ind= which(dat_2yrold$`Track Condition` %in% c( "Muddy", "Muddy (sealed)", "Slopppy (sealed)","Sloppy",
"Sloppy (sealed)", "Soft", "Yielding" ))
dat_2yrold$condition[ind] = "Slow"
with(dat_2yrold, table(Track, Surface))
with(dat_2yrold, table(Track, Condition))
with(dat_2yrold, table(Track, condition))
t1=dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
mean = mean(SI, na.rm = TRUE),
sd = sd(SI, na.rm = TRUE),
max = max(SI, na.rm = TRUE),
min=min(SI, na.rm = TRUE),
lasix = mean(as.numeric(Lasix == "Y"))
)
t2=with(dat_2yrold, table(Track, Surface))
t3=with(dat_2yrold, table(Track, condition))
cbind(t1, t2)
?mean
cbind(round(t1,3), t2, t3)
t1=dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
mean = round(mean(SI, na.rm = TRUE),3),
sd = sd(SI, na.rm = TRUE),
max = max(SI, na.rm = TRUE),
min=min(SI, na.rm = TRUE),
lasix = mean(as.numeric(Lasix == "Y"))
)
t1=dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
mean = round(mean(SI, na.rm = TRUE),3),
sd = round(sd(SI, na.rm = TRUE),3),
max = max(SI, na.rm = TRUE),
min=min(SI, na.rm = TRUE),
lasix = round(mean(as.numeric(Lasix == "Y")),3)
)
t2=with(dat_2yrold, table(Track, Surface))
t3=with(dat_2yrold, table(Track, condition))
cbind(t1, t2, t3)
cbind(t1, t2)
cbind( t2, t3)
t1=dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
mean = round(mean(SI, na.rm = TRUE),3),
sd = round(sd(SI, na.rm = TRUE),3),
max = max(SI, na.rm = TRUE),
min=min(SI, na.rm = TRUE),
lasix = round(mean(as.numeric(Lasix == "Y")),3)
)
t2=with(dat_2yrold, table(Track, Surface))
t3=with(dat_2yrold, table(Track, condition))
t1
t2
cbind(t1, t2)
merge(t1, t2)
cbind(data.frame(t1), t2)
dim(t1)
dim(t2)
names(t1)
names(t2)
t2=data.frame(with(dat_2yrold, table(Track, Surface)))
names(t2)
cbind(data.frame(t1), t2)
dim(t2)
t2
t2=with(dat_2yrold, table(Track, Surface))
t3=with(dat_2yrold, table(Track, condition))
cbind(t2, t3)
t1=dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
mean = round(mean(SI, na.rm = TRUE),3),
sd = round(sd(SI, na.rm = TRUE),3),
max = max(SI, na.rm = TRUE),
min=min(SI, na.rm = TRUE),
lasix = round(mean(as.numeric(Lasix == "Y")),3)
)
t2=with(dat_2yrold, table(Track, Surface))
t3=with(dat_2yrold, table(Track, condition))
cbind(t1,t2, t3)
as.matrix(t2)
cbind(t1, as.matrix(t2), as.matrix(t3))
library(lme4)
as.numeric(t2)
as.data.frame(t2)
library(lme4)
?glmer
(gm1 <- glmer(cbind(incidence, size - incidence) ~ period + (1 | herd),
data = cbpp, family = binomial))
(gm2 <- glmer(incidence ~ period + (1 | herd),
data = cbpp, family = binomial, offset=size))
incidence
(gm2 <- glmer(incidence/size ~ period + (1 | herd),
data = cbpp, family = binomial, weights=size))
(gm3 <- glmer(incidence/size ~ period + (1 | herd),
data = cbpp, family = binomial, offset=size))
setwd("C:/Users/yuan-admin/Dropbox/teaching/STAT574Spring23/R")
Mmmec=read.csv("melanoma.csv")
( glmer(death ~ UVB + (1|nation), Mmmec, poisson, offset = (edeath) )
( glmer(death ~ UVB + (1|nation), Mmmec, poisson, offset = (edeath) )
)
)
( glmer(death ~ UVB + (1|nation), Mmmec, poisson, offset = (edeath) )
)
( glmer(death ~ UVB + (1|nation)+offset(log(edeath)), Mmmec, poisson ))
edeath
Mmmec$edeath
( glmer(death ~ UVB + (1|nation)+offset((edeath)), Mmmec, poisson ))
( glmer(death ~ UVB + (1|nation), Mmmec, poisson, offset = (edeath) ))
summary( glmer(death ~ UVB + (1|nation)+offset(edeath), Mmmec, poisson ))
Mmmec$death[1]
hist(Mmmec$death)
kable(t2)
library(knitr)
kable(t2)
?kable
kable(t2, format = "simple")
kable(t1)
kable(t1)
t1=dat_2yrold %>% group_by(Track) %>%
summarise(
count = n(),
meanSI = round(mean(SI, na.rm = TRUE),3),
sdSI = round(sd(SI, na.rm = TRUE),3),
maxSI = max(SI, na.rm = TRUE),
minSI=min(SI, na.rm = TRUE),
nlasix = round(sum(as.numeric(Lasix == "Y")),3),
lasixPercentage = round(mean(as.numeric(Lasix == "Y")),3)
)
kable(t1)
?table
kable(t3/rowsum(t3))
kable(t3/rowsums(t3))
?rowSums
kable(t3/rowSums(t3))
kable(t3/rowSums(t3))
kable(t2/rowSums(t2))
kable(t2/rowSums(t2))
kable(round(t2/rowSums(t2),3))
kable(round(t2/rowSums(t2),3))
kable(round(t3/rowSums(t3),3))
kable(round(t3/rowSums(t3),3))
2023-1974
2023-1974+22
?sim
?arm::sim
with(dat_2yrold, chisq.test(x=as.factor(Track), y =as.factor(Surface) , correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(dat_2yrold, chisq.test(x=as.factor(Track), y =as.factor(Condition) , correct = FALSE,
simulate.p.value = FALSE, B = 2000))
with(dat_2yrold, summary(aov(as.numeric(`Speed Index`)~as.factor(condition))))
with(dat_2yrold, summary(aov(as.numeric(`Speed Index`)~as.factor(Surface))))
with(dat_2yrold, summary(aov(as.numeric(`Speed Index`)~as.factor(Surface)*as.factor(Lasix)*as.factor(`Consensus EIPH`))))
with(dat_2yrold, summary(aov(as.numeric(`Speed Index`)~as.factor(Surface)+as.factor(Lasix)+as.factor(`Consensus EIPH`))))
summary(glm(I(as.numeric(EIPH3) >= 1) ~ Lasix, family="binomial", data = subset(dat_2yrold, Lasix =="Y")))
dat_2yrold$EIPH3=dat_2yrold$`Consensus EIPH`
ind =which(dat_2yrold$`Consensus EIPH`>=3)
dat_2yrold$EIPH3[ind]=3
summary(glm(I(as.numeric(EIPH3) >= 1) ~ Lasix, family="binomial", data = subset(dat_2yrold, Lasix =="Y")))
summary(glm(I(as.numeric(EIPH3) >= 1) ~ SI, family="binomial", data = subset(dat_2yrold, Lasix =="Y")))
summary(glm(I(as.numeric(EIPH3) >= 1) ~ SI, family="binomial", data = subset(dat_2yrold, Lasix =="N")))
with(subset(dat_2yrold, Lasix =="Y"), plot(SI, EIPH3) )
with(subset(dat_2yrold, Lasix =="Y"), plot(SI, EIPH3, col==as.numeric(Track)) )
with(subset(dat_2yrold, Lasix =="Y"), plot(SI, EIPH3, col=as.factor(Track)) )
with(subset(dat_2yrold, Lasix =="Y"), table(Track))
with(subset(dat_2yrold, Lasix =="Y"), plot(SI, EIPH3, col=as.factor(Track == "Fair Grounds")) )
with(subset(dat_2yrold, Lasix =="Y"), plot(SI, EIPH3, col=as.factor(Track == "Fair Grounds")) )
summary(glm(I(as.numeric(EIPH3) >= 1) ~ SI, family="binomial", data = subset(dat_2yrold, (Lasix =="Y") & (Track != "Fair Grounds"))))
summary(glm(I(as.numeric(EIPH3) >= 1) ~ SI, family="binomial", data = subset(dat_2yrold, Lasix =="Y")))
with(subset(dat_2yrold, Lasix =="Y"), plot(SI, EIPH3, col=as.factor(Track == "Fair Grounds")) )
library("readxl")
#library("xlsx")
library(dplyr)
library(ggplot2)
userID= "yuan-admin" #"ywang"#"zzlcs" #
df_gene=read.csv( paste("C:/Users/", userID, "/Dropbox/research/Jiang/data/Protein Coding gene.csv", sep=""))
ggplot(df_gene, aes(x = `APA sites` , y = frequency)) +
geom_point()+geom_smooth()
names(df_gene)
df_gene=read.csv( paste("C:/Users/", userID, "/Dropbox/research/Jiang/data/Protein Coding gene.csv", sep=""))
ggplot(df_gene, aes(x = `APAsites` , y = frequency)) +
geom_point()+geom_smooth()
df_gene$APAgroup <- cut(df_gene$`APAsites`, breaks = c(0,1.1, 2.1, 3.1, 5.1,8.1,12.1, 17.1, 23.1, 30.1,  300),
labels= c("APA1", "APA2", "APA3", "APA4-5", "APA6-8", "APA9-12", "APA13-17", "APA18-23", "APA24-30", "APA31up"))
table(df_gene$APAgroup)
gene_dist <- group_by(df_gene, APAgroup )%>%
summarise(
count = n(),
mean = mean(frequency, na.rm = TRUE),
sd = sd(frequency, na.rm = TRUE)
)
plot(x=c(1,2,3,4.5,7,11, 15,21,27,35), gene_dist$mean, xlab="APA", ylab="Mean Frequency")
plot(x=c(1,2,3,4.5,7,11, 15,21,27,35), gene_dist$sd, xlab="APA", ylab="standard deviation of Frequency")
ggplot(df_gene, aes(x = APAgroup , y = (frequency))) +
geom_boxplot()
ggplot(df_gene, aes(x = APAgroup , y = log(frequency+1))) +
geom_boxplot()
?quantile
gene_dist <- group_by(df_gene, APAgroup )%>%
summarise(
count = n(),
mean = mean(frequency, na.rm = TRUE),
sd = sd(frequency, na.rm = TRUE),
Q975=quantile(frequency, probs=0.975, na.rm = TRUE),
Q025=quantile(frequency, probs=0.025, na.rm = TRUE)
)
gene_dist
gene_dist <- group_by(df_gene, APAgroup )%>%
summarise(
count = n(),
mean = mean(frequency, na.rm = TRUE),
sd = sd(frequency, na.rm = TRUE),
Q975=quantile(frequency, probs=0.975, na.rm = TRUE),
Q025=quantile(frequency, probs=0.025, na.rm = TRUE),
noshow=sum(frequency==0)
)
gene_dist
gene_dist <- group_by(df_gene, APAgroup )%>%
summarise(
count = n(),
mean = mean(frequency, na.rm = TRUE),
sd = sd(frequency, na.rm = TRUE),
max = max(frequency, na.rm = TRUE),
Q975=quantile(frequency, probs=0.975, na.rm = TRUE),
Q025=quantile(frequency, probs=0.025, na.rm = TRUE),
noshow=sum(frequency==0)
)
gene_dist
subset(df_gene, frequency>1000)
devtools::install_github("jinyizju/U.PhyloMaker")
devtools::install_github("jinyizju/V.PhyloMaker")
