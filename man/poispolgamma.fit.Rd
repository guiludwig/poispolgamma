% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poispolgamma.fit.R
\name{poispolgamma.fit}
\alias{poispolgamma.fit}
\title{Fit the multivariate count Gibbs sampler}
\usage{
poispolgamma.fit(
  y,
  x,
  coords,
  cov.model = "exponential",
  h = 1000,
  ngibbs = 100,
  outer.it = 200,
  useNNGP = FALSE,
  useSS = FALSE,
  starting = list(var = 1, nugget = 0.01, phi = 2),
  tuning = list(phi = 0.1),
  priors = list(beta.norm.var = 100, sigma.sq.ig = c(5, 20), tau.sq.ig = c(5, 20),
    phi.unif = c(1, 20)),
  startingEpsilon = NULL,
  hyperpar = c(a0 = 1, b0 = 1, c0 = 1),
  SShyperpar = c(a.SS = 1, b.SS = 1, d0 = 5, e0 = 20),
  tolerance = 1e-04,
  nomp = 1,
  nneigh = 15,
  verboseParam = TRUE
)
}
\arguments{
\item{y}{A n x 1 response vector of integer-valued positive numbers. 
(to do: matrix case).}

\item{x}{A n x p matrix of covariates.}

\item{h}{An integer that controls the negative binomial 
approximation to the Poisson.}

\item{useNNGP}{Whether to use Finley et al.'s spNNGP package to evaluate
the latent Gaussian field. Defaults to FALSE.}

\item{useSS}{Whether to use Spike and Slab priors on beta for variable
selection. Defaults to FALSE.}

\item{starting}{Initial values of MCMC samplers, with the exception of the 
nugget, which is fixed at the value (initial value for spNNGP package)}

\item{tuning}{Variances for MCMC candidates}

\item{priors}{Only used by spNNGP package}
}
\description{
Multivariate Poisson regression Gibbs sampler using the P\'{o}lya-Gamma method
}
\examples{
# Simulated data: Based on Wang and Wang (2018), same as equation (20) but 
using space instead of time
n <- 100
d <- 1 # Can't handle multivariate data yet
set.seed(1)
coords <- matrix(runif(n*2), ncol = 2) # 200 spatial sites
# B0 <- rbind(1:5, c(.3,.1,.5,.4,.6), -c(.05,.03,.07,.01,.1)) # dimensions in columns, p * d
b0 <- c(1, .3, .7) # I increase beta_2 a little
X <- cbind(rep(1,n), cos(2*pi*coords[,1]), sin(2*pi*coords[,2])) # n * p
# Notice geoR's cov.pars is sigma^2 * rho(dist/phi), whereas spNNGP uses sigma^2 * rho(phi*dist)
# We will use sigma^2 * rho(phi*dist) for compatibility with spNNGP
epsilon <- geoR::grf(grid = coords, cov.pars = c(1, 1/2.5), 
                     nsim = d, cov.model = "exponential", 
                     nugget = 0, messages = FALSE)
# epsilon$data is n x d
lambda <- exp(X\%*\%b0 + epsilon$data) # unidimensional
clambda <- as.numeric(lambda) # same as vec(lambda)
y <- rpois(length(clambda), clambda)
y <- matrix(y, ncol = d)
example1 <- poispolgamma.fit(y, x = X, coords = coords, cov.model = "exponential", 
                            h = 1000, ngibbs = 100, outer.it = 200, 
                            # initial values of phi cannot be at boundary of uniform prior
                            starting = list("sigma.sq" = 1, "tau.sq" = 0.01, "phi" = 2.0), # True: 1, 0, 2.5
                            tuning = list("phi" = 0.1),
                            priors = list("sigma.sq.ig" = c(1, 1), # shape (alpha) and scale (beta), E(pi) = beta/(alpha-1) = scale/(shape-1)
                                          "tau.sq.ig" = c(2, 0.05), # shape and scale
                                          "phi.unif" = c(1, 20)),
                            verboseParam = TRUE) 
plot(example1)
\dontrun{
# Another example: using spNNGP
example2 <- poispolgamma.fit(y, x = X, coords = coords, cov.model = "exponential", 
                            h = 1000, ngibbs = 100, outer.it = 200, useNNGP = TRUE,
                            # initial values of phi cannot be at boundary of uniform prior
                            starting = list("sigma.sq" = 1, "tau.sq" = 0.01, "phi" = 2.0), # True: 1, 0, 2.5
                            tuning = list("phi" = 1),
                            priors = list("sigma.sq.ig" = c(1, 1), # shape (alpha) and scale (beta), E(pi) = beta/(alpha-1) = scale/(shape-1)
                                          "tau.sq.ig" = c(2, 0.05), # shape and scale
                                          "phi.unif" = c(1, 20)),
                            verboseParam = TRUE) 
plot(example2)
# Another example: using Spike and Slab priors
example3 <- poispolgamma.fit(y, x = X, coords = coords, cov.model = "exponential", 
                            h = 1000, ngibbs = 100, outer.it = 200, useSS = TRUE,
                            # initial values of phi cannot be at boundary of uniform prior
                            starting = list("sigma.sq" = 1, "tau.sq" = 0.01, "phi" = 2.0), # True: 1, 0, 2.5
                            tuning = list("phi" = 1),
                            priors = list("sigma.sq.ig" = c(1, 1), # shape (alpha) and scale (beta), E(pi) = beta/(alpha-1) = scale/(shape-1)
                                          "tau.sq.ig" = c(2, 0.05), # shape and scale
                                          "phi.unif" = c(1, 20)),
                            verboseParam = TRUE) 
plot(example3)
}
}
